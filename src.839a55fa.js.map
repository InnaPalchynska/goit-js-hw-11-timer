{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","timeFields","getFieldsBySelector","start","setInterval","currentTime","Date","now","time","getTimeComponents","days","hours","mins","secs","updateTimeFields","refs","daysField","document","querySelector","hoursField","minsField","secsField","textContent","pad","Math","floor","value","String","padStart"],"mappings":";AAkDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlDMA,IAAAA,EAAAA,WACkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BC,KAAAA,WAAa,KAAKC,oBAAoBH,GACtCC,KAAAA,WAAaA,EACbG,KAAAA,QA8CT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QA3CE,MAAA,WAAQ,IAAA,EAAA,KACNC,YAAY,WACJC,IAAAA,EAAcC,KAAKC,MACnBC,EAAO,EAAKR,WAAaK,EACK,EAAA,EAAKI,kBAAkBD,GAAnDE,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC3B,EAAKC,iBAAiB,CAAEJ,KAAAA,EAAMC,MAAAA,EAAOC,KAAAA,EAAMC,KAAAA,KAC1C,OAqCP,CAAA,IAAA,sBAlCE,MAAA,SAAoBd,GAQXgB,MAPM,CACXC,UAAWC,SAASC,cAAiBnB,GAAAA,OAAAA,EAD1B,yBAEXoB,WAAYF,SAASC,cAAiBnB,GAAAA,OAAAA,EAF3B,0BAGXqB,UAAWH,SAASC,cAAiBnB,GAAAA,OAAAA,EAH1B,yBAIXsB,UAAWJ,SAASC,cAAiBnB,GAAAA,OAAAA,EAA1B,4BA6BjB,CAAA,IAAA,mBAvBE,MAAA,SAA8C,GAA3BW,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC/BZ,KAAAA,WAAWe,UAAUM,YAAcZ,EACnCT,KAAAA,WAAWkB,WAAWG,YAAcX,EACpCV,KAAAA,WAAWmB,UAAUE,YAAcV,EACnCX,KAAAA,WAAWoB,UAAUC,YAAcT,IAmB5C,CAAA,IAAA,oBAhBE,MAAA,SAAkBL,GAQT,MAAA,CAAEE,KAPI,KAAKa,IAAIC,KAAKC,MAAMjB,EAAQ,QAO1BG,MAND,KAAKY,IACjBC,KAAKC,MAAOjB,EAAQ,MAAyB,OAKzBI,KAHT,KAAKW,IAAIC,KAAKC,MAAOjB,EAAQ,KAAoB,MAGlCK,KAFf,KAAKU,IAAIC,KAAKC,MAAOjB,EAAQ,IAAc,SAU5D,CAAA,IAAA,MALE,MAAA,SAAIkB,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAIrC,EAlDM9B,GAkDN,IAAIA,EAAe,CACjBC,SAAU,WACVC,WAAY,IAAIM,KAAK","file":"src.839a55fa.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.timeFields = this.getFieldsBySelector(selector);\n    this.targetDate = targetDate;\n    this.start();\n  }\n\n  start() {\n    setInterval(() => {\n      const currentTime = Date.now();\n      const time = this.targetDate - currentTime;\n      const { days, hours, mins, secs } = this.getTimeComponents(time);\n      this.updateTimeFields({ days, hours, mins, secs });\n    }, 1000);\n  }\n\n  getFieldsBySelector(selector) {\n    const refs = {\n      daysField: document.querySelector(`${selector} [data-value=\"days\"]`),\n      hoursField: document.querySelector(`${selector} [data-value=\"hours\"]`),\n      minsField: document.querySelector(`${selector} [data-value=\"mins\"]`),\n      secsField: document.querySelector(`${selector} [data-value=\"secs\"]`),\n    };\n\n    return refs;\n  }\n\n  updateTimeFields({ days, hours, mins, secs }) {\n    this.timeFields.daysField.textContent = days;\n    this.timeFields.hoursField.textContent = hours;\n    this.timeFields.minsField.textContent = mins;\n    this.timeFields.secsField.textContent = secs;\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nnew CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2019'),\n});\n"]}